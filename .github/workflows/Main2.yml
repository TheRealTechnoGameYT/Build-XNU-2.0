#!/bin/bash
set -euxo pipefail

# Aller dans le dossier xnu
cd xnu

# Définir le SDK/KDK correspondant au kernel Tahoe (Darwin 26)
# Remplacez ce chemin si votre KDK est ailleurs
export KDK_PATH=${KDK_PATH:-/Library/Developer/KDKs/KDK_26.1_25B5042k.kdk}
export SDKROOT="$KDK_PATH/SDKs/MacOSX.sdk"

# Vérifier si SDKROOT est défini
if [ -z "$SDKROOT" ]; then
    SDKROOT=$(xcrun --sdk macosx --show-sdk-path 2>/dev/null || true)
fi
echo "SDKROOT=$SDKROOT"

# Définir la version du kernel Darwin
export RC_DARWIN_KERNEL_VERSION=${RC_DARWIN_KERNEL_VERSION:-26}
echo "RC_DARWIN_KERNEL_VERSION=$RC_DARWIN_KERNEL_VERSION"

# Vérifier que availability.pl est présent et exécutable
if [ ! -x "$SDKROOT/usr/local/libexec/availability.pl" ]; then
    echo "Erreur : availability.pl manquant ou non exécutable dans $SDKROOT/usr/local/libexec"
    exit 1
fi

# Définir le fichier log
log="$GITHUB_WORKSPACE/build.log"
echo "Build start $(date)" > "$log"

# Lancer la compilation parallèle en mode RELEASE pour X86_64
make ARCH_CONFIGS=X86_64 KERNEL_CONFIGS=RELEASE SDKROOT="$SDKROOT" \
    BUILD_LTO=0 -j"$(sysctl -n hw.ncpu)" 2>&1 | tee -a "$log"

# Vérifier le code de sortie
exitcode=${PIPESTATUS[0]}
if [ "$exitcode" -ne 0 ]; then
    echo "::error::make failed with exit $exitcode"
    cp "$log" "$GITHUB_WORKSPACE/"
    exit "$exitcode"
fi

# Copier le log final
cp "$log" "$GITHUB_WORKSPACE/"
echo "Build completed successfully"